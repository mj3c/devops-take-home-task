name: Update ECS app

# https://docs.github.com/en/actions/how-tos/security-for-github-actions/security-hardening-your-deployments/configuring-openid-connect-in-amazon-web-services
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

on:
  push:
    branches:
      - main
    paths:
      - 'live/demo-app.version'
  # Allow triggering manually for easier testing
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        aws-region:
          - eu-central-1
    env:
      CLUSTER_NAME: demo
      SERVICE_NAME: demo-app
      TASK_DEF_NAME: demo-app
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ matrix.aws-region }}
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/CustomGithubActionsRole

      - name: Read new image
        id: image
        run: |
          IMAGE_URI=$(cat live/demo-app.version | cut -d '=' -f2)
          echo "image=$IMAGE_URI" >> $GITHUB_OUTPUT

      - name: Get current task def
        run: |
          CURRENT_TASK_DEF=$(aws ecs describe-task-definition --task-definition "$TASK_DEF_NAME")
          echo "$CURRENT_TASK_DEF" > taskdef.json
          
      - name: Create new task def revision with new image
        id: newtask
        run: |
          IMAGE="${{ steps.image.outputs.image }}"
          NEW_TASK_DEF=$(cat taskdef.json | jq --arg IMAGE "$IMAGE" '.taskDefinition | .containerDefinitions[0].image = $IMAGE | del(.taskDefinitionArn) | del(.revision) | del(.status) | del(.requiresAttributes) | del(.compatibilities) |  del(.registeredAt)  | del(.registeredBy)')
          NEW_TASK_REGISTER_RESPONSE=$(aws ecs register-task-definition --cli-input-json "$NEW_TASK_DEF")
          NEW_TASK_DEF_ARN=$(echo $NEW_TASK_REGISTER_RESPONSE | jq '.taskDefinition.taskDefinitionArn')
          echo "taskdef_arn=$NEW_TASK_DEF_ARN" >> $GITHUB_OUTPUT

      - name: Update ECS service to use new task def revision
        run: |
          aws ecs update-service \
            --cluster $CLUSTER_NAME \
            --service $SERVICE_NAME \
            --task-definition ${{ steps.newtask.outputs.taskdef_arn }} \
            --force-new-deployment